play.http.secret.key="ThehiveTestPassword"

# ElasticSearch
search {
  # Name of the index
  index = the_hive
  # Name of the ElasticSearch cluster
  cluster = hive
  # Address of the ElasticSearch instance
  host = ["elasticsearch:9200"]
  # Scroll keepalive
  keepalive = 1m
  # Size of the page for scroll
  pagesize = 50
  # Arbitrary settings
  settings {
    # Maximum number of nested fields
    mapping.nested_fields.limit = 50
  }
}
db.janusgraph {
storage.backend: berkeleyje
storage.directory: /tmp/
berkeleyje.freeDisk: 200
}

play.http.parser.maxDiskBuffer: 50MB

play.modules.enabled += org.thp.thehive.connector.cortex.CortexModule
cortex {
  servers = [
    {
      name = local
      url = "http://cortex:9001"
      auth {
        type = "bearer"
        key = "wqoCA42tx2gPQ4ky/Jq6ImfZ93s2f1mv"
      }
    }
  ]
  # Check job update time intervalcortex
  refreshDelay = 5 seconds
  # Maximum number of successive errors before give up
  maxRetryOnError = 3
  # Check remote Cortex status time interval
  statusCheckInterval = 30 seconds
}

# Configure webhooks
notification.webhook.endpoints = [
  {
    name: local
    url: "http://n8n:5678/"
    version: 0
    wsConfig: {}
    auth: {type:"none"}
    includedTheHiveOrganisations: ["*"]
    excludedTheHiveOrganisations: []
  }
]

# MISP configuration
play.modules.enabled += org.thp.thehive.connector.misp.MispModule
misp {
  interval: 5 min
  servers: [
    {
      name = "MISP THP"            # MISP name
      url = "https://misp/" # URL or MISP
      auth {
        type = key
        key = "DEvtyDbcI2vU1EhsimLb06CrnGSDPNkTSwD1SPCA"             # MISP API key
      }
      wsConfig { ssl { loose { acceptAnyCertificate: true } } }
    }
  ]
}